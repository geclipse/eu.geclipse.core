/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package eu.geclipse.jsdl.model.base.validation;

import eu.geclipse.jsdl.model.base.ApplicationType;
import eu.geclipse.jsdl.model.base.CPUArchitectureType;
import eu.geclipse.jsdl.model.base.CandidateHostsType;
import eu.geclipse.jsdl.model.base.CreationFlagEnumeration;
import eu.geclipse.jsdl.model.base.DataStagingType;
import eu.geclipse.jsdl.model.base.FileSystemType;
import eu.geclipse.jsdl.model.base.FileSystemTypeEnumeration;
import eu.geclipse.jsdl.model.base.JobDefinitionType;
import eu.geclipse.jsdl.model.base.JobDescriptionType;
import eu.geclipse.jsdl.model.base.JobIdentificationType;
import eu.geclipse.jsdl.model.base.OperatingSystemType;
import eu.geclipse.jsdl.model.base.OperatingSystemTypeEnumeration;
import eu.geclipse.jsdl.model.base.OperatingSystemTypeType;
import eu.geclipse.jsdl.model.base.ProcessorArchitectureEnumeration;
import eu.geclipse.jsdl.model.base.RangeValueType;
import eu.geclipse.jsdl.model.base.ResourcesType;
import eu.geclipse.jsdl.model.base.SourceTargetType;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link eu.geclipse.jsdl.model.base.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator
{
  boolean validate();

  boolean validateMixed(FeatureMap value);
  boolean validateXMLNSPrefixMap(EMap value);
  boolean validateXSISchemaLocation(EMap value);
  boolean validateApplication(ApplicationType value);
  boolean validateApplicationName(String value);
  boolean validateApplicationVersion(String value);
  boolean validateCandidateHosts(CandidateHostsType value);
  boolean validateCPUArchitecture(CPUArchitectureType value);
  boolean validateCPUArchitectureName(ProcessorArchitectureEnumeration value);
  boolean validateCreationFlag(CreationFlagEnumeration value);
  boolean validateDataStaging(DataStagingType value);
  boolean validateDeleteOnTermination(boolean value);
  boolean validateDescription(String value);
  boolean validateDiskSpace(RangeValueType value);
  boolean validateExclusiveExecution(boolean value);
  boolean validateFileName(String value);
  boolean validateFileSystem(FileSystemType value);
  boolean validateFilesystemName(String value);
  boolean validateFileSystemType(FileSystemTypeEnumeration value);
  boolean validateHostName(String value);
  boolean validateIndividualCPUCount(RangeValueType value);
  boolean validateIndividualCPUSpeed(RangeValueType value);
  boolean validateIndividualCPUTime(RangeValueType value);
  boolean validateIndividualDiskSpace(RangeValueType value);
  boolean validateIndividualNetworkBandwidth(RangeValueType value);
  boolean validateIndividualPhysicalMemory(RangeValueType value);
  boolean validateIndividualVirtualMemory(RangeValueType value);
  boolean validateJobAnnotation(String value);
  boolean validateJobDefinition(JobDefinitionType value);
  boolean validateJobDescription(JobDescriptionType value);
  boolean validateJobIdentification(JobIdentificationType value);
  boolean validateJobName(String value);
  boolean validateJobProject(String value);
  boolean validateMountPoint(String value);
  boolean validateOperatingSystem(OperatingSystemType value);
  boolean validateOperatingSystemName(OperatingSystemTypeEnumeration value);
  boolean validateOperatingSystemType(OperatingSystemTypeType value);
  boolean validateOperatingSystemVersion(String value);
  boolean validateResources(ResourcesType value);
  boolean validateSource(SourceTargetType value);
  boolean validateTarget(SourceTargetType value);
  boolean validateTotalCPUCount(RangeValueType value);
  boolean validateTotalCPUTime(RangeValueType value);
  boolean validateTotalDiskSpace(RangeValueType value);
  boolean validateTotalPhysicalMemory(RangeValueType value);
  boolean validateTotalResourceCount(RangeValueType value);
  boolean validateTotalVirtualMemory(RangeValueType value);
  boolean validateURI(String value);
}
