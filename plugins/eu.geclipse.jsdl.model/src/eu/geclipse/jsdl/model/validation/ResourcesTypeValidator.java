/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package eu.geclipse.jsdl.model.validation;

import eu.geclipse.jsdl.model.CPUArchitectureType;
import eu.geclipse.jsdl.model.CandidateHostsType;
import eu.geclipse.jsdl.model.OperatingSystemType;
import eu.geclipse.jsdl.model.RangeValueType;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link eu.geclipse.jsdl.model.ResourcesType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 * @deprecated This interface is deprecated. Substitute with the respective class in package eu.geclipse.jsdl.model.base.validation
 */
public interface ResourcesTypeValidator
{
  boolean validate();

  boolean validateCandidateHosts(CandidateHostsType value);
  boolean validateFileSystem(EList value);
  boolean validateExclusiveExecution(boolean value);
  boolean validateOperatingSystem(OperatingSystemType value);
  boolean validateCPUArchitecture(CPUArchitectureType value);
  boolean validateIndividualCPUSpeed(RangeValueType value);
  boolean validateIndividualCPUTime(RangeValueType value);
  boolean validateIndividualCPUCount(RangeValueType value);
  boolean validateIndividualNetworkBandwidth(RangeValueType value);
  boolean validateIndividualPhysicalMemory(RangeValueType value);
  boolean validateIndividualVirtualMemory(RangeValueType value);
  boolean validateIndividualDiskSpace(RangeValueType value);
  boolean validateTotalCPUTime(RangeValueType value);
  boolean validateTotalCPUCount(RangeValueType value);
  boolean validateTotalPhysicalMemory(RangeValueType value);
  boolean validateTotalVirtualMemory(RangeValueType value);
  boolean validateTotalDiskSpace(RangeValueType value);
  boolean validateTotalResourceCount(RangeValueType value);
  boolean validateAny(FeatureMap value);
  boolean validateAnyAttribute(FeatureMap value);
}
