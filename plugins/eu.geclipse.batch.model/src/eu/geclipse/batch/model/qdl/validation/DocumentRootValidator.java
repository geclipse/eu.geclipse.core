/******************************************************************************
 * Copyright (c) 2008 g-Eclipse consortium
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Initial development of the original code was made for
 * project g-Eclipse founded by European Union
 * project number: FP6-IST-034327  http://www.geclipse.eu/
 *
 * Contributor(s):
 *     UCY (http://www.cs.ucy.ac.cy)
 *      - Nicholas Loulloudes (loulloudes.n@cs.ucy.ac.cy)
 *
  *****************************************************************************/
package eu.geclipse.batch.model.qdl.validation;

import eu.geclipse.batch.model.qdl.AllowedVirtualOrganizationsType;
import eu.geclipse.batch.model.qdl.IntegerRangeValueType;
import eu.geclipse.batch.model.qdl.QueueStatusEnumeration;
import eu.geclipse.batch.model.qdl.QueueType;
import eu.geclipse.batch.model.qdl.QueueTypeEnumeration;
import eu.geclipse.batch.model.qdl.RangeValueType;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link eu.geclipse.batch.model.qdl.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate 
 * how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator
{
  boolean validate();

  boolean validateMixed(FeatureMap value);
  boolean validateXMLNSPrefixMap(EMap<String, String> value);
  boolean validateXSISchemaLocation(EMap<String, String> value);
  boolean validateAllowedVirtualOrganizations(AllowedVirtualOrganizationsType value);
  boolean validateAssignedResources(IntegerRangeValueType value);

  boolean validateAssignedResources(RangeValueType value);
  boolean validateCPUTimeLimit(RangeValueType value);
  boolean validateDescription(String value);
  boolean validateJobsInQueue(IntegerRangeValueType value);

  boolean validatePriority(IntegerRangeValueType value);

  boolean validateJobsInQueue(RangeValueType value);
  boolean validatePriority(RangeValueType value);
  boolean validateQueue(QueueType value);
  boolean validateQueueStarted(boolean value);

  boolean validateQueueStatus(QueueStatusEnumeration value);
  boolean validateQueueType(QueueTypeEnumeration value);
  boolean validateRunningJobs(IntegerRangeValueType value);

  boolean validateRunningJobs(RangeValueType value);
  boolean validateVOName(String value);
  boolean validateWallTimeLimit(RangeValueType value);
}
