<?xml version="1.0" encoding="UTF-8"?>
<project name="g-Eclipse Doc Isv Build" default="all"  basedir="." >

  <target name="init">
    <available file="${basedir}/index" property="index.present"/>
  	<!-- <property name="repositoryStructure" value="../plugins/"/ -->
  	<property name="repositoryStructure" value=""/>
  </target>

  <target name="all" depends="init" unless="index.present">
  	<antcall target="convertSchemaToHtml" />
  	<!--<antcall target="examplesDocCopy" /-->
  	<antcall target="generateJavadoc" />
    <!--<antcall target="build.index" /-->
    <!--antcall target="createDocZip" /-->
  </target>


  <target name="build.index" description="Builds search index for the plug-in: eu.geclipse.doc.isv" if="eclipse.running">
    <help.buildHelpIndex manifest="${basedir}/plugin.xml" destination="${basedir}"/>
  </target>

  <target name="convertSchemaToHtml" if="eclipse.running">
    <property name="dest" value="html/extension-points" />
  	
    <!--scrub isv plugin directories of any preexisting extension doc content-->
    <delete defaultexcludes="true">
      <fileset dir="${dest}" />
    </delete>
  	<mkdir dir="${dest}" />
  	
    <record name="${basedir}/platformconvert.txt" action="start"/>
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.core/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.core.filesystem/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.core.jobs/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.gvid/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.info/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../${repositoryStructure}eu.geclipse.ui/plugin.xml" destination="${dest}" />
    <record name="${basedir}/platformconvert.txt" action="stop"/>
  </target>

  <target name="examplesDocCopy" >
    <copy todir="samples">
      <fileset dir="..">
        <include name="org.eclipse.team.examples.filesystem/doc-html/"/>
      </fileset>
    </copy>
  </target>

  <target name="getJavadocPath">
    <available file="${java.home}/../bin/javadoc.exe" property="javadoc" value="${java.home}/../bin/javadoc.exe"/>
    <available file="${java.home}/../bin/javadoc" property="javadoc" value="${java.home}/../bin/javadoc" />
  </target>

  <target name="generateJavadoc" depends="getJavadocPath" if="javadoc">

    <property name="optionsFile" value="platformOptions.tmp.txt" />
    <copy file="platformOptions.txt" tofile="${optionsFile}" overwrite="true" />
    
    <condition property="argsListDelimiter" value=":">
      <os family="unix" />
    </condition>
    <condition property="argsListDelimiter" value=";">
      <os family="windows" />
    </condition>
    
    <replaceregexp file="${basedir}/${optionsFile}" flags="g" match="(\r\n?|\n);" replace="${argsListDelimiter}" />
    <replace file="${basedir}/${optionsFile}" token="@repDirectory@" value="${repositoryStructure}" />
    <replace file="${basedir}/${optionsFile}" token="@rt@" value="${bootclasspath}" />

    <!--scrub isv plugin directories of any preexisting api doc content-->
    <delete defaultexcludes="true">
      <fileset dir="html/api_reference" />
    </delete>
    <mkdir dir="html/api_reference" />

    <exec dir="." executable="${javadoc}" output="doc.bin.log">
      <arg line="@${basedir}/${optionsFile} -J-Xmx1000M" />
    </exec>
    
  </target>

  <target name="createDocZip">
    <zip zipfile="${basedir}/doc.zip" basedir="${basedir}" includes="about.html, book.css, html/**" />
  </target>
</project>

